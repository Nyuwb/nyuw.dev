## ----------------------------
## ----- DEVCONTAINER IMAGE
## ----------------------------
ARG ALPINE_VERSION
ARG PHP_VERSION

FROM php:${PHP_VERSION}-fpm-${ALPINE_VERSION} AS devcontainer

ARG COMPOSER_VERSION
ARG NODE_VERSION

# Defining app path
WORKDIR /var/www/html

# PHP extensions installer
RUN curl -fsSL -o /usr/local/bin/install-php-extensions \
        https://github.com/mlocati/docker-php-extension-installer/releases/latest/download/install-php-extensions \
    && chmod +x /usr/local/bin/install-php-extensions

# PHP extensions
RUN install-php-extensions \
        @composer-${COMPOSER_VERSION} \
        curl \
        intl \
        mbstring \
        pdo \
        pdo_mysql \
        xdebug

# Node installation
RUN curl -sL https://deb.nodesource.com/setup_22.x | bash -

# Package installation
RUN apt-get update \
    && apt-get install -y --no-install-recommends \
        autoconf \
        automake \
        gcc \
        git \
        make \
        nodejs=${NODE_VERSION}-1nodesource1 \
        sudo \
        ssh \
    && rm -rf /var/lib/apt/lists/*

# User creation
RUN addgroup ${USERNAME} -g ${UID} && \
    adduser ${USERNAME} -G ${USERNAME} -u ${UID} -D

# Copy local files to container
COPY docker/php/www.conf /usr/local/etc/php-fpm.d/zz-docker.conf

# PHP configuration
RUN cp ${PHP_INI_DIR}/php.ini-development ${PHP_INI_DIR}/php.ini

# Configuring logs
RUN mkdir /var/log/php-fpm \
    && chown ${USERNAME}:${USERNAME} /var/log/php-fpm/

# Add user to sudoers
RUN printf "%%${USERNAME} ALL=(ALL:ALL) NOPASSWD: ALL" > /etc/sudoers.d/${USERNAME}

HEALTHCHECK NONE

USER ${USERNAME}
